{"ast":null,"code":"var _jsxFileName = \"/Users/jonshih/Documents/spring2022/cs4550/final-proj/frontend/src/components/screens/home.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport * as memeService from \"../services/meme-service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [topMeme, setTopMeme] = useState();\n\n  const fetchTopMeme = async () => {\n    const response = await memeService.fetchMemesFromAPI();\n    const topMeme = response.data.data.memes[0];\n    setTopMeme(topMeme);\n    console.log(topMeme);\n  };\n\n  useEffect(() => {\n    fetchTopMeme();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: topMeme && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-text bg-light meme-detail\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: topMeme.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meme-div\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: topMeme.url,\n          className: \"meme-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"W6G0rQc+zzTcswMIKWtcgg65fKE=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/jonshih/Documents/spring2022/cs4550/final-proj/frontend/src/components/screens/home.js"],"names":["useEffect","useState","memeService","Home","topMeme","setTopMeme","fetchTopMeme","response","fetchMemesFromAPI","data","memes","console","log","name","url"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,KAAKC,WAAZ,MAA6B,0BAA7B;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,EAAtC;;AAEA,QAAMK,YAAY,GAAG,YAAY;AAC/B,UAAMC,QAAQ,GAAG,MAAML,WAAW,CAACM,iBAAZ,EAAvB;AACA,UAAMJ,OAAO,GAAGG,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmBC,KAAnB,CAAyB,CAAzB,CAAhB;AACAL,IAAAA,UAAU,CAACD,OAAD,CAAV;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AACD,GALD;;AAOAJ,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,YAAY;AACb,GAFQ,CAAT;AAGA,sBACE;AAAA,cACGF,OAAO,iBACN;AAAK,MAAA,SAAS,EAAC,kCAAf;AAAA,8BACE;AAAA,kBAAKA,OAAO,CAACS;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAE,UAAhB;AAAA,+BACE;AAAK,UAAA,GAAG,EAAET,OAAO,CAACU,GAAlB;AAAuB,UAAA,SAAS,EAAE;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAzBD;;GAAMX,I;;KAAAA,I;AA2BN,eAAeA,IAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport * as memeService from \"../services/meme-service\";\n\nconst Home = () => {\n  const [topMeme, setTopMeme] = useState();\n\n  const fetchTopMeme = async () => {\n    const response = await memeService.fetchMemesFromAPI();\n    const topMeme = response.data.data.memes[0];\n    setTopMeme(topMeme);\n    console.log(topMeme);\n  };\n\n  useEffect(() => {\n    fetchTopMeme();\n  });\n  return (\n    <div>\n      {topMeme && (\n        <div className=\"center-text bg-light meme-detail\">\n          <h2>{topMeme.name}</h2>\n          <div className={\"meme-div\"}>\n            <img src={topMeme.url} className={\"meme-image\"} />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}