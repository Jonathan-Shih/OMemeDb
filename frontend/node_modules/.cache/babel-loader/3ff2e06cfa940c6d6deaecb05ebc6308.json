{"ast":null,"code":"var _jsxFileName = \"/Users/jonshih/Documents/spring2022/cs4550/final-proj/frontend/src/components/screens/profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport * as service from \"../services/auth-service\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useProfile } from \"../contexts/profile-context.js\";\nimport * as userService from \"../services/user-service.js\";\nimport * as memeService from \"../services/meme-service.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  _s();\n\n  const {\n    profile\n  } = useProfile();\n  const navigate = useNavigate();\n  const [user, setUser] = useState();\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isValid, setIsValid] = useState(true);\n\n  const logout = async () => {\n    await service.logout();\n    navigate(\"login\");\n  };\n\n  const checkUser = async () => {\n    const curUser = await userService.fetchUserById(profile._id);\n    setUser(curUser);\n    setEmail(curUser.data.email);\n    setUsername(curUser.data.username);\n    setPassword(curUser.data.password);\n  };\n\n  const handleUpdate = async () => {\n    if (!(email === \"\" || username === \"\" || password === \"\")) {\n      try {\n        await userService.updateUser(user, email, username, password);\n        const curUser = await userService.fetchUserById(profile._id);\n        setUser(curUser);\n      } catch (e) {\n        setIsValid(false);\n      }\n    } else {\n      setIsValid(false);\n    }\n  };\n\n  const fetchMemeByID = async memeID => {\n    const response = await memeService.fetchMemesFromAPI();\n    console.log(response.data.data.memes.find(curMeme => curMeme.id === memeID));\n  };\n\n  useEffect(() => {\n    checkUser();\n  }, [setUser]);\n  return user ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Profile: \", user.data.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: logout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-text position-relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-text\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"email\",\n          className: \"form-control\",\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), \"Username\", /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"username\",\n          className: \"form-control\",\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), \"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"password\",\n          className: \"form-control\",\n          type: \"text\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), !isValid && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger alert-dismissible\",\n        role: \"alert\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Holy guacamole!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), \" You should check in on some of those fields above.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpdate,\n          className: \"btn btn-primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), user.data.likedMemes.length !== 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), fetchMemeByID(user.data.likedMemes[0])[0]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this) : \"\";\n};\n\n_s(Profile, \"YeJ1ujMzcAhlHyipIbhrVZDD8NA=\", false, function () {\n  return [useProfile, useNavigate];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/jonshih/Documents/spring2022/cs4550/final-proj/frontend/src/components/screens/profile.js"],"names":["React","useRef","useEffect","useState","service","Link","useNavigate","useProfile","userService","memeService","Profile","profile","navigate","user","setUser","email","setEmail","username","setUsername","password","setPassword","isValid","setIsValid","logout","checkUser","curUser","fetchUserById","_id","data","handleUpdate","updateUser","e","fetchMemeByID","memeID","response","fetchMemesFromAPI","console","log","memes","find","curMeme","id","target","value","likedMemes","length"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport * as service from \"../services/auth-service\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useProfile } from \"../contexts/profile-context.js\";\nimport * as userService from \"../services/user-service.js\";\nimport * as memeService from \"../services/meme-service.js\";\nconst Profile = () => {\n  const { profile } = useProfile();\n  const navigate = useNavigate();\n  const [user, setUser] = useState();\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isValid, setIsValid] = useState(true);\n\n  const logout = async () => {\n    await service.logout();\n    navigate(\"login\");\n  };\n\n  const checkUser = async () => {\n    const curUser = await userService.fetchUserById(profile._id);\n    setUser(curUser);\n    setEmail(curUser.data.email);\n    setUsername(curUser.data.username);\n    setPassword(curUser.data.password);\n  };\n\n  const handleUpdate = async () => {\n    if (!(email === \"\" || username === \"\" || password === \"\")) {\n      try {\n        await userService.updateUser(user, email, username, password);\n        const curUser = await userService.fetchUserById(profile._id);\n        setUser(curUser);\n      } catch (e) {\n        setIsValid(false);\n      }\n    } else {\n      setIsValid(false);\n    }\n  };\n\n  const fetchMemeByID = async (memeID) => {\n    const response = await memeService.fetchMemesFromAPI();\n    console.log(\n      response.data.data.memes.find((curMeme) => curMeme.id === memeID)\n    );\n  };\n\n  useEffect(() => {\n    checkUser();\n  }, [setUser]);\n\n  return user ? (\n    <div>\n      <h2>Profile: {user.data.username}</h2>\n\n      <button className=\"btn btn-danger\" onClick={logout}>\n        Logout\n      </button>\n      <hr />\n      <div className=\"left-text position-relative\">\n        <div className=\"left-text\">\n          Email\n          <input\n            placeholder=\"email\"\n            className=\"form-control\"\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          Username\n          <input\n            placeholder=\"username\"\n            className=\"form-control\"\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          Password\n          <input\n            placeholder=\"password\"\n            className=\"form-control\"\n            type=\"text\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        {!isValid && (\n          <div className=\"alert alert-danger alert-dismissible\" role=\"alert\">\n            <strong>Holy guacamole!</strong> You should check in on some of\n            those fields above.\n          </div>\n        )}\n        <div className=\"d-flex\">\n          <button onClick={handleUpdate} className=\"btn btn-primary\">\n            Update\n          </button>\n        </div>\n      </div>\n\n      {user.data.likedMemes.length !== 0 && (\n        <div>\n          <hr />\n          {fetchMemeByID(user.data.likedMemes[0])[0]}\n        </div>\n      )}\n    </div>\n  ) : (\n    \"\"\n  );\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}