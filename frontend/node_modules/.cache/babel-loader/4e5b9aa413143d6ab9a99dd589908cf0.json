{"ast":null,"code":"var _jsxFileName = \"/Users/jonshih/Documents/spring2022/cs4550/final-proj/frontend/src/screens/CourseSearch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport Preformatted from \"../components/preformatted\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OmdbSearch = () => {\n  _s();\n\n  const titleSearchRef = useRef();\n  const {\n    movieSearch\n  } = useParams();\n  const navigate = useNavigate();\n  const [movies, setMovies] = useState([]);\n  const searchUrl = \"https://www.omdbapi.com/?apikey=852159f0\";\n\n  const searchByTitle = async () => {\n    const searchString = titleSearchRef.current.value || movieSearch || \"batman\";\n    const response = await axios.get(`${searchUrl}&s=${searchString}`);\n    setMovies(response.data.Search);\n    titleSearchRef.current.value = searchString;\n    navigate(`/search/${searchString}`);\n  };\n\n  useEffect(() => {\n    searchByTitle();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Omdb Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: searchByTitle,\n          className: \"btn btn-primary float-end\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: titleSearchRef,\n          className: \"form-control w-75\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), movies.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/details/${movie.imdbID}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.Poster,\n            className: \"me-2\",\n            height: 30\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), movie.Title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Preformatted, {\n      obj: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OmdbSearch, \"NQyWxs5a45SlWd9GKqzeoNcTf/M=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = OmdbSearch;\nexport default OmdbSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"OmdbSearch\");","map":{"version":3,"sources":["/Users/jonshih/Documents/spring2022/cs4550/final-proj/frontend/src/screens/CourseSearch.js"],"names":["React","useEffect","useRef","useState","axios","Preformatted","Link","useNavigate","useParams","OmdbSearch","titleSearchRef","movieSearch","navigate","movies","setMovies","searchUrl","searchByTitle","searchString","current","value","response","get","data","Search","map","movie","imdbID","Poster","Title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,SAA5B,QAA6C,kBAA7C;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,cAAc,GAAGR,MAAM,EAA7B;AACA,QAAM;AAAES,IAAAA;AAAF,MAAkBH,SAAS,EAAjC;AACA,QAAMI,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMY,SAAS,GAAG,0CAAlB;;AACA,QAAMC,aAAa,GAAG,YAAY;AAChC,UAAMC,YAAY,GAChBP,cAAc,CAACQ,OAAf,CAAuBC,KAAvB,IAAgCR,WAAhC,IAA+C,QADjD;AAEA,UAAMS,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAW,GAAEN,SAAU,MAAKE,YAAa,EAAzC,CAAvB;AACAH,IAAAA,SAAS,CAACM,QAAQ,CAACE,IAAT,CAAcC,MAAf,CAAT;AACAb,IAAAA,cAAc,CAACQ,OAAf,CAAuBC,KAAvB,GAA+BF,YAA/B;AACAL,IAAAA,QAAQ,CAAE,WAAUK,YAAa,EAAzB,CAAR;AACD,GAPD;;AAQAhB,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAEA,aAAjB;AAAgC,UAAA,SAAS,EAAC,2BAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAO,UAAA,GAAG,EAAEN,cAAZ;AAA4B,UAAA,SAAS,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAOGG,MAAM,CAACW,GAAP,CAAYC,KAAD,iBACV;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,YAAWA,KAAK,CAACC,MAAO,EAAnC;AAAA,kCACE;AAAK,YAAA,GAAG,EAAED,KAAK,CAACE,MAAhB;AAAwB,YAAA,SAAS,EAAC,MAAlC;AAAyC,YAAA,MAAM,EAAE;AAAjD;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGF,KAAK,CAACG,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD,CAPH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAkBE,QAAC,YAAD;AAAc,MAAA,GAAG,EAAEf;AAAnB;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAvCD;;GAAMJ,U;UAEoBD,S,EACPD,W;;;KAHbE,U;AAyCN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport Preformatted from \"../components/preformatted\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\n\nconst OmdbSearch = () => {\n  const titleSearchRef = useRef();\n  const { movieSearch } = useParams();\n  const navigate = useNavigate();\n  const [movies, setMovies] = useState([]);\n  const searchUrl = \"https://www.omdbapi.com/?apikey=852159f0\";\n  const searchByTitle = async () => {\n    const searchString =\n      titleSearchRef.current.value || movieSearch || \"batman\";\n    const response = await axios.get(`${searchUrl}&s=${searchString}`);\n    setMovies(response.data.Search);\n    titleSearchRef.current.value = searchString;\n    navigate(`/search/${searchString}`);\n  };\n  useEffect(() => {\n    searchByTitle();\n  }, []);\n  return (\n    <div>\n      <h1>Omdb Search</h1>\n      <ul className=\"list-group\">\n        <li className=\"list-group-item\">\n          <button onClick={searchByTitle} className=\"btn btn-primary float-end\">\n            Search\n          </button>\n          <input ref={titleSearchRef} className=\"form-control w-75\" />\n        </li>\n        {movies.map((movie) => (\n          <li className=\"list-group-item\">\n            <Link to={`/details/${movie.imdbID}`}>\n              <img src={movie.Poster} className=\"me-2\" height={30} />\n              {movie.Title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <Preformatted obj={movies} />\n    </div>\n  );\n};\n\nexport default OmdbSearch;\n"]},"metadata":{},"sourceType":"module"}