{"ast":null,"code":"var _jsxFileName = \"/Users/jonshih/Documents/spring2022/cs4550/final-proj/frontend/src/components/contexts/profile-context.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport * as service from \"../services/auth-service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileContext = /*#__PURE__*/React.createContext();\nexport const ProfileProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [profile, setProfile] = useState();\n\n  const login = async (email, password) => {\n    try {\n      const p = await service.login(email, password);\n      setProfile(p);\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  const checkLoggedIn = async () => {\n    try {\n      const p = await service.profile();\n      setProfile(p);\n      return p;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  const signup = async (email, username, password) => {\n    try {\n      const newUser = await service.signup(email, username, password);\n      setProfile(newUser);\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  const value = {\n    profile,\n    signup,\n    checkLoggedIn,\n    login\n  };\n  return /*#__PURE__*/_jsxDEV(ProfileContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileProvider, \"xmVPOM/5AyKtnrQRAITPZeTDUbU=\");\n\n_c = ProfileProvider;\nexport const useProfile = () => {\n  _s2();\n\n  return useContext(ProfileContext);\n};\n\n_s2(useProfile, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileProvider\");","map":{"version":3,"sources":["/Users/jonshih/Documents/spring2022/cs4550/final-proj/frontend/src/components/contexts/profile-context.js"],"names":["React","useContext","useState","service","ProfileContext","createContext","ProfileProvider","children","profile","setProfile","login","email","password","p","e","checkLoggedIn","signup","username","newUser","value","useProfile"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAO,KAAKC,OAAZ,MAAyB,0BAAzB;;AAEA,MAAMC,cAAc,gBAAGJ,KAAK,CAACK,aAAN,EAAvB;AAEA,OAAO,MAAMC,eAAe,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC/C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,EAAtC;;AAEA,QAAMQ,KAAK,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;AACvC,QAAI;AACF,YAAMC,CAAC,GAAG,MAAMV,OAAO,CAACO,KAAR,CAAcC,KAAd,EAAqBC,QAArB,CAAhB;AACAH,MAAAA,UAAU,CAACI,CAAD,CAAV;AACD,KAHD,CAGE,OAAOC,CAAP,EAAU;AACV,YAAMA,CAAN;AACD;AACF,GAPD;;AASA,QAAMC,aAAa,GAAG,YAAY;AAChC,QAAI;AACF,YAAMF,CAAC,GAAG,MAAMV,OAAO,CAACK,OAAR,EAAhB;AACAC,MAAAA,UAAU,CAACI,CAAD,CAAV;AACA,aAAOA,CAAP;AACD,KAJD,CAIE,OAAOC,CAAP,EAAU;AACV,YAAMA,CAAN;AACD;AACF,GARD;;AAUA,QAAME,MAAM,GAAG,OAAOL,KAAP,EAAcM,QAAd,EAAwBL,QAAxB,KAAqC;AAClD,QAAI;AACF,YAAMM,OAAO,GAAG,MAAMf,OAAO,CAACa,MAAR,CAAeL,KAAf,EAAsBM,QAAtB,EAAgCL,QAAhC,CAAtB;AACAH,MAAAA,UAAU,CAACS,OAAD,CAAV;AACD,KAHD,CAGE,OAAOJ,CAAP,EAAU;AACV,YAAMA,CAAN;AACD;AACF,GAPD;;AASA,QAAMK,KAAK,GAAG;AAAEX,IAAAA,OAAF;AAAWQ,IAAAA,MAAX;AAAmBD,IAAAA,aAAnB;AAAkCL,IAAAA;AAAlC,GAAd;AACA,sBACE,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAES,KAAhC;AAAA,cAAwCZ;AAAxC;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAnCM;;GAAMD,e;;KAAAA,e;AAqCb,OAAO,MAAMc,UAAU,GAAG,MAAM;AAAA;;AAC9B,SAAOnB,UAAU,CAACG,cAAD,CAAjB;AACD,CAFM;;IAAMgB,U","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport * as service from \"../services/auth-service\";\n\nconst ProfileContext = React.createContext();\n\nexport const ProfileProvider = ({ children }) => {\n  const [profile, setProfile] = useState();\n\n  const login = async (email, password) => {\n    try {\n      const p = await service.login(email, password);\n      setProfile(p);\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  const checkLoggedIn = async () => {\n    try {\n      const p = await service.profile();\n      setProfile(p);\n      return p;\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  const signup = async (email, username, password) => {\n    try {\n      const newUser = await service.signup(email, username, password);\n      setProfile(newUser);\n    } catch (e) {\n      throw e;\n    }\n  };\n\n  const value = { profile, signup, checkLoggedIn, login };\n  return (\n    <ProfileContext.Provider value={value}>{children}</ProfileContext.Provider>\n  );\n};\n\nexport const useProfile = () => {\n  return useContext(ProfileContext);\n};\n"]},"metadata":{},"sourceType":"module"}