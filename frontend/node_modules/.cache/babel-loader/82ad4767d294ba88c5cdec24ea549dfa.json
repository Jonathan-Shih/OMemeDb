{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:4000/api/users\";\nconst api = axios.create({\n  withCredentials: true\n});\nexport const likeMeme = async (user, memeID) => {\n  const updatedLikedMemes = user.likedMemes;\n  updatedLikedMemes.push(memeID);\n  const newUser = { ...user,\n    likedMemes: updatedLikedMemes\n  };\n  const response = await api.put(`${API_URL}/${user._id}`, newUser);\n  return response;\n};\nexport const unlikeMeme = async (user, memeID) => {\n  const updatedLikedMemes = user.likedMemes.filter(curMemeID => curMemeID !== memeID);\n  const newUser = { ...user,\n    likedMemes: updatedLikedMemes\n  };\n  const response = await api.put(`${API_URL}/${user._id}`, newUser);\n  return response;\n};\nexport const dislikeMeme = async (user, memeID) => {\n  const updatedDislikedMemes = user.dislikedMemes;\n  updatedDislikedMemes.push(memeID);\n  const newUser = { ...user,\n    dislikedMemes: updatedDislikedMemes\n  };\n  const response = await api.put(`${API_URL}/${user._id}`, newUser);\n  return response;\n};\nexport const undislikeMeme = async (user, memeID) => {\n  const updatedDislikedMemes = user.dislikedMemes.filter(curMemeID => curMemeID !== memeID);\n  const newUser = { ...user,\n    dislikedMemes: updatedDislikedMemes\n  };\n  const response = await api.put(`${API_URL}/${user._id}`, newUser);\n  return response;\n};\nexport const fetchUserById = async userID => {\n  const response = await api.get(`${API_URL}/${userID}`);\n  return response;\n};\nexport const favoriteMeme = async (user, memeID) => {\n  const newUser = { ...user,\n    favoriteMeme: memeID\n  };\n  const response = await api.put(`${API_URL}/${user._id}`, newUser);\n  return response;\n};\nexport const unfavoriteMeme = async (user, memeID) => {\n  const newUser = { ...user,\n    favoriteMeme: \"\"\n  };\n  const response = await api.put(`${API_URL}/${user._id}`, newUser);\n  return response;\n};\nexport const updateUser = async (user, username, password) => {\n  const newUser = { ...user,\n    username: username,\n    password: password\n  };\n  const response = await api.put(`${API_URL}/${user._id}`, newUser);\n  return response;\n};","map":{"version":3,"sources":["/Users/jonshih/Documents/spring2022/cs4550/final-proj/frontend/src/components/services/user-service.js"],"names":["axios","API_URL","api","create","withCredentials","likeMeme","user","memeID","updatedLikedMemes","likedMemes","push","newUser","response","put","_id","unlikeMeme","filter","curMemeID","dislikeMeme","updatedDislikedMemes","dislikedMemes","undislikeMeme","fetchUserById","userID","get","favoriteMeme","unfavoriteMeme","updateUser","username","password"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nconst API_URL = \"http://localhost:4000/api/users\";\nconst api = axios.create({ withCredentials: true });\n\nexport const likeMeme = async (user, memeID) => {\n  const updatedLikedMemes = user.likedMemes;\n  updatedLikedMemes.push(memeID);\n  const newUser = {\n    ...user,\n    likedMemes: updatedLikedMemes,\n  };\n  const response = await api.put(`${API_URL}/${user._id}`, newUser);\n  return response;\n};\n\nexport const unlikeMeme = async (user, memeID) => {\n  const updatedLikedMemes = user.likedMemes.filter(\n    (curMemeID) => curMemeID !== memeID\n  );\n  const newUser = {\n    ...user,\n    likedMemes: updatedLikedMemes,\n  };\n  const response = await api.put(`${API_URL}/${user._id}`, newUser);\n  return response;\n};\n\nexport const dislikeMeme = async (user, memeID) => {\n  const updatedDislikedMemes = user.dislikedMemes;\n  updatedDislikedMemes.push(memeID);\n  const newUser = {\n    ...user,\n    dislikedMemes: updatedDislikedMemes,\n  };\n  const response = await api.put(`${API_URL}/${user._id}`, newUser);\n  return response;\n};\n\nexport const undislikeMeme = async (user, memeID) => {\n  const updatedDislikedMemes = user.dislikedMemes.filter(\n    (curMemeID) => curMemeID !== memeID\n  );\n  const newUser = {\n    ...user,\n    dislikedMemes: updatedDislikedMemes,\n  };\n  const response = await api.put(`${API_URL}/${user._id}`, newUser);\n  return response;\n};\n\nexport const fetchUserById = async (userID) => {\n  const response = await api.get(`${API_URL}/${userID}`);\n  return response;\n};\n\nexport const favoriteMeme = async (user, memeID) => {\n  const newUser = {\n    ...user,\n    favoriteMeme: memeID,\n  };\n  const response = await api.put(`${API_URL}/${user._id}`, newUser);\n  return response;\n};\n\nexport const unfavoriteMeme = async (user, memeID) => {\n  const newUser = {\n    ...user,\n    favoriteMeme: \"\",\n  };\n  const response = await api.put(`${API_URL}/${user._id}`, newUser);\n  return response;\n};\n\nexport const updateUser = async (user, username, password) => {\n  const newUser = {\n    ...user,\n    username: username,\n    password: password,\n  };\n  const response = await api.put(`${API_URL}/${user._id}`, newUser);\n  return response;\n};\n"]},"metadata":{},"sourceType":"module"}