{"ast":null,"code":"var _jsxFileName = \"/Users/jonshih/Documents/spring2022/cs4550/final-proj/frontend/src/components/screens/meme-search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link, useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport * as memeService from \"../services/meme-service.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MemesSearch = () => {\n  _s();\n\n  const titleRef = useRef();\n  const {\n    memeSearch\n  } = useParams();\n  const navigate = useNavigate();\n  const [memes, setMemes] = useState([]);\n\n  const fetchMemes = async () => {\n    const searchString = titleRef.current.value || memeSearch;\n    const response = await memeService.fetchMemesFromAPI();\n\n    if (searchString === undefined || searchString === \" \") {\n      const first10 = response.data.data.memes.sort(() => Math.random() - 0.5).slice(0, 10);\n      setMemes(first10);\n      navigate(`/meme-search/`);\n    } else {\n      setMemes(response.data.data.memes.filter(meme => meme.name.toLowerCase().includes(searchString)));\n      titleRef.current.value = searchString;\n      navigate(`/meme-search/${searchString}`);\n    }\n  };\n\n  useEffect(() => {\n    fetchMemes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"left-text\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search Memes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-75\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMemes,\n        className: \"btn btn-primary float-end \",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: titleRef,\n        className: \"form-control search-bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-text search search-bar\",\n        children: memes.map(meme => /*#__PURE__*/_jsxDEV(Link, {\n          to: `/details/${meme.id}`,\n          className: \"list-group-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: meme.url,\n            height: 30,\n            className: \"me-2 meme-search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), meme.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MemesSearch, \"mV+5FAI7Quzyg3PC6LNCLjag2v0=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = MemesSearch;\nexport default MemesSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemesSearch\");","map":{"version":3,"sources":["/Users/jonshih/Documents/spring2022/cs4550/final-proj/frontend/src/components/screens/meme-search.js"],"names":["React","useEffect","useRef","useState","axios","Link","useLocation","useNavigate","useParams","memeService","MemesSearch","titleRef","memeSearch","navigate","memes","setMemes","fetchMemes","searchString","current","value","response","fetchMemesFromAPI","undefined","first10","data","sort","Math","random","slice","filter","meme","name","toLowerCase","includes","map","id","url"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link, useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport * as memeService from \"../services/meme-service.js\";\n\nconst MemesSearch = () => {\n  const titleRef = useRef();\n  const { memeSearch } = useParams();\n  const navigate = useNavigate();\n  const [memes, setMemes] = useState([]);\n\n  const fetchMemes = async () => {\n    const searchString = titleRef.current.value || memeSearch;\n    const response = await memeService.fetchMemesFromAPI();\n    if (searchString === undefined || searchString === \" \") {\n      const first10 = response.data.data.memes\n        .sort(() => Math.random() - 0.5)\n        .slice(0, 10);\n      setMemes(first10);\n      navigate(`/meme-search/`);\n    } else {\n      setMemes(\n        response.data.data.memes.filter((meme) =>\n          meme.name.toLowerCase().includes(searchString)\n        )\n      );\n      titleRef.current.value = searchString;\n      navigate(`/meme-search/${searchString}`);\n    }\n  };\n\n  useEffect(() => {\n    fetchMemes();\n  }, []);\n\n  return (\n    <div className=\"left-text\">\n      <h2>Search Memes</h2>\n      <div className=\"w-75\">\n        <button onClick={fetchMemes} className=\"btn btn-primary float-end \">\n          Search\n        </button>\n        <input ref={titleRef} className=\"form-control search-bar\" />\n      </div>\n      <ul className=\"list-group \">\n        <div className=\"left-text search search-bar\">\n          {memes.map((meme) => (\n            <Link to={`/details/${meme.id}`} className=\"list-group-item\">\n              <img src={meme.url} height={30} className=\"me-2 meme-search\" />\n              {meme.name}\n            </Link>\n          ))}\n        </div>\n      </ul>\n    </div>\n  );\n};\n\nexport default MemesSearch;\n"]},"metadata":{},"sourceType":"module"}