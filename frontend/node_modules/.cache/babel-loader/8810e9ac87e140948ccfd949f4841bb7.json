{"ast":null,"code":"var _jsxFileName = \"/Users/jonshih/Documents/spring2022/cs4550/final-proj/frontend/src/components/screens/profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport * as service from \"../services/auth-service\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useProfile } from \"../contexts/profile-context.js\";\nimport * as userService from \"../services/user-service.js\";\nimport * as memeService from \"../services/meme-service.js\";\nimport * as commentService from \"../services/comment-service.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  _s();\n\n  const {\n    profile\n  } = useProfile();\n  const navigate = useNavigate();\n  const [user, setUser] = useState();\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isValid, setIsValid] = useState(true);\n  const [likedMemes, setLikedMemes] = useState([]);\n  const [favMeme, setFavMeme] = useState();\n  const [comments, setComments] = useState([]);\n\n  const logout = async () => {\n    await service.logout();\n    navigate(\"login\");\n  };\n\n  const checkUser = async () => {\n    const curUser = await userService.fetchUserById(profile._id);\n    setUser(curUser);\n    setEmail(curUser.data.email);\n    setUsername(curUser.data.username);\n    setPassword(curUser.data.password);\n  };\n\n  const handleUpdate = async () => {\n    if (!(email === \"\" || username === \"\" || password === \"\")) {\n      try {\n        await userService.updateUser(user, email, username, password);\n        const curUser = await userService.fetchUserById(profile._id);\n        setUser(curUser);\n      } catch (e) {\n        setIsValid(false);\n      }\n    } else {\n      setIsValid(false);\n    }\n  };\n\n  const loadLikedMemes = async memeID => {\n    const response = await memeService.fetchMemesFromAPI();\n    const curUser = await userService.fetchUserById(profile._id);\n    const memeArr = [];\n    curUser.data.likedMemes.map(async memeid => {\n      const curMeme = response.data.data.memes.find(curMeme => curMeme.id === memeid);\n      return memeArr.push(curMeme);\n    });\n    setLikedMemes(memeArr);\n  };\n\n  const fetchFavMeme = async () => {\n    const response = await memeService.fetchMemesFromAPI();\n    const curUser = await userService.fetchUserById(profile._id);\n    const memeID = curUser.data.favoriteMeme;\n    setFavMeme(response.data.data.memes.find(curMeme => curMeme.id === memeID));\n  };\n\n  const fetchComments = async () => {\n    const response = await commentService.findCommentsByUserId(profile._id);\n    console.log(response);\n    setComments(response);\n  };\n\n  useEffect(() => {\n    checkUser();\n    loadLikedMemes();\n    fetchFavMeme();\n    fetchComments();\n  }, [setUser, setFavMeme, setComments]);\n  return user ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Profile: \", user.data.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: logout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-text position-relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-text\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"email\",\n          className: \"form-control\",\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), \"Username\", /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"username\",\n          className: \"form-control\",\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), \"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"password\",\n          className: \"form-control\",\n          type: \"text\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), !isValid && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger alert-dismissible\",\n        role: \"alert\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Holy guacamole!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), \" You should check in on some of those fields above.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpdate,\n          className: \"btn btn-primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), favMeme && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Favorite Meme:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meme-display\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/meme-search/details/${favMeme.id}`,\n          className: \"list-group-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: favMeme.url,\n            height: 30,\n            className: \"me-2 meme-image-display\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), favMeme.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this), user.data.likedMemes.length !== 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Liked Memes:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meme-display liked-memes\",\n        children: likedMemes.map(meme => /*#__PURE__*/_jsxDEV(Link, {\n          to: `/meme-search/details/${meme.id}`,\n          className: \"list-group-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: meme.url,\n            height: 30,\n            className: \"me-2 meme-image-display\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this), meme.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this), comments.length !== 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Comments:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meme-display liked-memes\",\n        children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item comment-item\",\n          children: [comment && comment.username, \":\", /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"comment\",\n            children: comment && comment.comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this) : \"\";\n};\n\n_s(Profile, \"ky57XC7Tr7kn6JRqMUaGk/yTOqc=\", false, function () {\n  return [useProfile, useNavigate];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/jonshih/Documents/spring2022/cs4550/final-proj/frontend/src/components/screens/profile.js"],"names":["React","useRef","useEffect","useState","service","Link","useNavigate","useProfile","userService","memeService","commentService","Profile","profile","navigate","user","setUser","email","setEmail","username","setUsername","password","setPassword","isValid","setIsValid","likedMemes","setLikedMemes","favMeme","setFavMeme","comments","setComments","logout","checkUser","curUser","fetchUserById","_id","data","handleUpdate","updateUser","e","loadLikedMemes","memeID","response","fetchMemesFromAPI","memeArr","map","memeid","curMeme","memes","find","id","push","fetchFavMeme","favoriteMeme","fetchComments","findCommentsByUserId","console","log","target","value","url","name","length","meme","comment"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport * as service from \"../services/auth-service\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useProfile } from \"../contexts/profile-context.js\";\nimport * as userService from \"../services/user-service.js\";\nimport * as memeService from \"../services/meme-service.js\";\nimport * as commentService from \"../services/comment-service.js\";\n\nconst Profile = () => {\n  const { profile } = useProfile();\n  const navigate = useNavigate();\n  const [user, setUser] = useState();\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isValid, setIsValid] = useState(true);\n  const [likedMemes, setLikedMemes] = useState([]);\n  const [favMeme, setFavMeme] = useState();\n  const [comments, setComments] = useState([]);\n\n  const logout = async () => {\n    await service.logout();\n    navigate(\"login\");\n  };\n\n  const checkUser = async () => {\n    const curUser = await userService.fetchUserById(profile._id);\n    setUser(curUser);\n    setEmail(curUser.data.email);\n    setUsername(curUser.data.username);\n    setPassword(curUser.data.password);\n  };\n\n  const handleUpdate = async () => {\n    if (!(email === \"\" || username === \"\" || password === \"\")) {\n      try {\n        await userService.updateUser(user, email, username, password);\n        const curUser = await userService.fetchUserById(profile._id);\n        setUser(curUser);\n      } catch (e) {\n        setIsValid(false);\n      }\n    } else {\n      setIsValid(false);\n    }\n  };\n\n  const loadLikedMemes = async (memeID) => {\n    const response = await memeService.fetchMemesFromAPI();\n    const curUser = await userService.fetchUserById(profile._id);\n    const memeArr = [];\n    curUser.data.likedMemes.map(async (memeid) => {\n      const curMeme = response.data.data.memes.find(\n        (curMeme) => curMeme.id === memeid\n      );\n      return memeArr.push(curMeme);\n    });\n    setLikedMemes(memeArr);\n  };\n\n  const fetchFavMeme = async () => {\n    const response = await memeService.fetchMemesFromAPI();\n    const curUser = await userService.fetchUserById(profile._id);\n    const memeID = curUser.data.favoriteMeme;\n    setFavMeme(\n      response.data.data.memes.find((curMeme) => curMeme.id === memeID)\n    );\n  };\n\n  const fetchComments = async () => {\n    const response = await commentService.findCommentsByUserId(profile._id);\n    console.log(response);\n    setComments(response);\n  };\n\n  useEffect(() => {\n    checkUser();\n    loadLikedMemes();\n    fetchFavMeme();\n    fetchComments();\n  }, [setUser, setFavMeme, setComments]);\n\n  return user ? (\n    <div className=\"wrapper\">\n      <h2>Profile: {user.data.username}</h2>\n\n      <button className=\"btn btn-danger\" onClick={logout}>\n        Logout\n      </button>\n      <hr />\n      <div className=\"left-text position-relative\">\n        <div className=\"left-text\">\n          Email\n          <input\n            placeholder=\"email\"\n            className=\"form-control\"\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          Username\n          <input\n            placeholder=\"username\"\n            className=\"form-control\"\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          Password\n          <input\n            placeholder=\"password\"\n            className=\"form-control\"\n            type=\"text\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </div>\n        {!isValid && (\n          <div className=\"alert alert-danger alert-dismissible\" role=\"alert\">\n            <strong>Holy guacamole!</strong> You should check in on some of\n            those fields above.\n          </div>\n        )}\n        <div className=\"d-flex\">\n          <button onClick={handleUpdate} className=\"btn btn-primary\">\n            Update\n          </button>\n        </div>\n      </div>\n      {favMeme && (\n        <div>\n          <hr />\n          <h5>Favorite Meme:</h5>\n          <div className=\"meme-display\">\n            <Link\n              to={`/meme-search/details/${favMeme.id}`}\n              className=\"list-group-item\"\n            >\n              <img\n                src={favMeme.url}\n                height={30}\n                className=\"me-2 meme-image-display\"\n              />\n              {favMeme.name}\n            </Link>\n          </div>\n        </div>\n      )}\n      {user.data.likedMemes.length !== 0 && (\n        <div>\n          <hr />\n          <h5>Liked Memes:</h5>\n          <div className=\"meme-display liked-memes\">\n            {likedMemes.map((meme) => (\n              <Link\n                to={`/meme-search/details/${meme.id}`}\n                className=\"list-group-item\"\n              >\n                <img\n                  src={meme.url}\n                  height={30}\n                  className=\"me-2 meme-image-display\"\n                />\n                {meme.name}\n              </Link>\n            ))}\n          </div>\n        </div>\n      )}\n      {comments.length !== 0 && (\n        <div>\n          <hr />\n          <h5>Comments:</h5>\n          <div className=\"meme-display liked-memes\">\n            {comments.map((comment) => (\n              <li className=\"list-group-item comment-item\">\n                {comment && comment.username}:\n                <p className=\"comment\">{comment && comment.comment}</p>\n              </li>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  ) : (\n    \"\"\n  );\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}