{"ast":null,"code":"var _jsxFileName = \"/Users/jonshih/Documents/spring2022/cs4550/final-proj/frontend/src/screens/meme-details.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport SecureContent from \"../contexts/secure-context.js\";\nimport * as memeService from \"../services/meme-service.js\";\nimport * as userService from \"../services/user-service.js\";\nimport * as authService from \"../services/auth-service.js\";\nimport { useProfile } from \"../contexts/profile-context.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MemeDetails = () => {\n  _s();\n\n  const [meme, setMeme] = useState({});\n  const [ourMeme, setOurMeme] = useState({});\n  const [liked, setLiked] = useState();\n  const [disliked, setDisliked] = useState();\n  const {\n    memeID\n  } = useParams();\n  const {\n    checkLoggedIn\n  } = useProfile();\n\n  const handleUserActions = async action => {\n    const curSessionUser = await checkLoggedIn();\n    const curUser = await userService.fetchUserById(curSessionUser._id);\n\n    switch (action) {\n      case \"like\":\n        await userService.likeMeme(curUser.data, memeID);\n        break;\n\n      case \"unlike\":\n        await userService.unlikeMeme(curUser.data, memeID);\n        break;\n\n      case \"dislike\":\n        await userService.dislikeMeme(curUser.data, memeID);\n        break;\n\n      case \"undislike\":\n        await userService.undislikeMeme(curUser.data, memeID);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const fetchMemeByID = async () => {\n    const response = await memeService.fetchMemesFromAPI();\n    setMeme(response.data.data.memes.find(curMeme => curMeme.id === memeID));\n  };\n\n  const fetchMemeByIDfromDatabase = async () => {\n    const response = await memeService.fetchMemeById(memeID);\n    setOurMeme(response.data);\n  };\n\n  const checkLiked = async () => {\n    const curSessionUser = await checkLoggedIn();\n    const curUser = await userService.fetchUserById(curSessionUser._id);\n    const curLiked = curUser.data.likedMemes.includes(memeID);\n    setLiked(curLiked);\n    const curDisliked = curUser.data.dislikedMemes.includes(memeID);\n    setDisliked(curDisliked);\n  };\n\n  const handleMemeLikes = async () => {\n    const curMeme = {\n      name: meme.name,\n      memeID: meme.id,\n      url: meme.url\n    };\n    const response = await memeService.likeMeme(curMeme);\n    setOurMeme(response.data);\n  };\n\n  const handleUserLikes = async () => {\n    const curSessionUser = await checkLoggedIn();\n    const curUser = await userService.fetchUserById(curSessionUser._id);\n    await userService.likeMeme(curUser.data, memeID);\n  };\n\n  const handleMemeUnlikes = async () => {\n    const curMeme = {\n      title: meme.title,\n      memeID: meme.id,\n      url: meme.url\n    };\n    const response = await memeService.unlikeMeme(curMeme);\n    setOurMeme(response.data);\n  };\n\n  const handleUserUnlikes = async () => {\n    const curSessionUser = await checkLoggedIn();\n    const curUser = await userService.fetchUserById(curSessionUser._id);\n    await userService.unlikeMeme(curUser.data, memeID);\n  };\n\n  const handleMemeUnlikeDislikes = async () => {\n    const curMeme = {\n      name: meme.name,\n      memeID: meme.id,\n      url: meme.url\n    };\n    const response = await memeService.unlikeDislikeMeme(curMeme);\n    setOurMeme(response.data);\n  };\n\n  const handleUserDislikes = async () => {\n    const curSessionUser = await checkLoggedIn();\n    const curUser = await userService.fetchUserById(curSessionUser._id);\n    await userService.dislikeMeme(curUser.data, memeID);\n  };\n\n  const handleMemeUndislikeLikess = async () => {\n    const curMeme = {\n      title: meme.title,\n      memeID: meme.id,\n      url: meme.url\n    };\n    const response = await memeService.unDislikeLikeMeme(curMeme);\n    setOurMeme(response.data);\n  };\n\n  const handleUserUndislikes = async () => {\n    const curSessionUser = await checkLoggedIn();\n    const curUser = await userService.fetchUserById(curSessionUser._id);\n    await userService.undislikeMeme(curUser.data, memeID);\n  };\n\n  const handleUserUnLikeDislikes = async () => {\n    const curSessionUser = await checkLoggedIn();\n    const curUser = await userService.fetchUserById(curSessionUser._id);\n    await userService.unlikeMeme(curUser.data, memeID);\n    const updatedcurUser = await userService.fetchUserById(curSessionUser._id);\n    await userService.dislikeMeme(updatedcurUser.data, memeID);\n  };\n\n  const handleUserUndislikeLikes = async () => {\n    const curSessionUser = await checkLoggedIn();\n    const curUser = await userService.fetchUserById(curSessionUser._id);\n    await userService.undislikeMeme(curUser.data, memeID);\n    const updatedcurUser = await userService.fetchUserById(curSessionUser._id);\n    await userService.likeMeme(updatedcurUser.data, memeID);\n  };\n\n  useEffect(() => {\n    fetchMemeByID();\n    fetchMemeByIDfromDatabase();\n    checkLiked();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: meme.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: meme.url,\n      height: 500\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SecureContent, {\n      loggedInContent: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: `${liked ? \"fas fa-thumbs-up text-danger\" : \"fas fa-thumbs-up\"}`,\n          onClick: () => {\n            if (liked) {\n              handleMemeUnlikes();\n              handleUserUnlikes();\n              setLiked(false);\n            } else if (!liked && disliked) {\n              handleMemeUndislikeLikess();\n              handleUserUndislikeLikes();\n              setLiked(true);\n              setDisliked(false);\n            } else {\n              handleMemeLikes();\n              handleUserLikes();\n              setLiked(true);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), ourMeme && ourMeme.likes || 0, /*#__PURE__*/_jsxDEV(\"i\", {\n          className: `${disliked ? \"fas fa-thumbs-down text-primary\" : \"fas fa-thumbs-down\"}`,\n          onClick: () => {\n            if (disliked) {\n              handleMemeLikes();\n              handleUserUndislikes();\n              setDisliked(false);\n            } else if (liked && !disliked) {\n              handleMemeUnlikeDislikes();\n              handleUserUnLikeDislikes();\n              setDisliked(true);\n              setLiked(false);\n            } else {\n              handleMemeUnlikes();\n              handleUserDislikes();\n              setDisliked(true);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this),\n      nonloggedInContent: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"please login to like or comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MemeDetails, \"4N18X4Fxp/mJonTltiBtpQaTmf4=\", false, function () {\n  return [useParams, useProfile];\n});\n\n_c = MemeDetails;\nexport default MemeDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemeDetails\");","map":{"version":3,"sources":["/Users/jonshih/Documents/spring2022/cs4550/final-proj/frontend/src/screens/meme-details.js"],"names":["React","useEffect","useState","useParams","SecureContent","memeService","userService","authService","useProfile","MemeDetails","meme","setMeme","ourMeme","setOurMeme","liked","setLiked","disliked","setDisliked","memeID","checkLoggedIn","handleUserActions","action","curSessionUser","curUser","fetchUserById","_id","likeMeme","data","unlikeMeme","dislikeMeme","undislikeMeme","fetchMemeByID","response","fetchMemesFromAPI","memes","find","curMeme","id","fetchMemeByIDfromDatabase","fetchMemeById","checkLiked","curLiked","likedMemes","includes","curDisliked","dislikedMemes","handleMemeLikes","name","url","handleUserLikes","handleMemeUnlikes","title","handleUserUnlikes","handleMemeUnlikeDislikes","unlikeDislikeMeme","handleUserDislikes","handleMemeUndislikeLikess","unDislikeLikeMeme","handleUserUndislikes","handleUserUnLikeDislikes","updatedcurUser","handleUserUndislikeLikes","likes"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport SecureContent from \"../contexts/secure-context.js\";\nimport * as memeService from \"../services/meme-service.js\";\nimport * as userService from \"../services/user-service.js\";\nimport * as authService from \"../services/auth-service.js\";\nimport { useProfile } from \"../contexts/profile-context.js\";\n\nconst MemeDetails = () => {\n  const [meme, setMeme] = useState({});\n  const [ourMeme, setOurMeme] = useState({});\n  const [liked, setLiked] = useState();\n  const [disliked, setDisliked] = useState();\n  const { memeID } = useParams();\n  const { checkLoggedIn } = useProfile();\n\n  const handleUserActions = async (action) => {\n    const curSessionUser = await checkLoggedIn();\n    const curUser = await userService.fetchUserById(curSessionUser._id);\n    switch (action) {\n      case \"like\":\n        await userService.likeMeme(curUser.data, memeID);\n        break;\n      case \"unlike\":\n        await userService.unlikeMeme(curUser.data, memeID);\n        break;\n      case \"dislike\":\n        await userService.dislikeMeme(curUser.data, memeID);\n        break;\n      case \"undislike\":\n        await userService.undislikeMeme(curUser.data, memeID);\n        break;\n      default:\n        return;\n    }\n  };\n  const fetchMemeByID = async () => {\n    const response = await memeService.fetchMemesFromAPI();\n    setMeme(response.data.data.memes.find((curMeme) => curMeme.id === memeID));\n  };\n\n  const fetchMemeByIDfromDatabase = async () => {\n    const response = await memeService.fetchMemeById(memeID);\n    setOurMeme(response.data);\n  };\n\n  const checkLiked = async () => {\n    const curSessionUser = await checkLoggedIn();\n    const curUser = await userService.fetchUserById(curSessionUser._id);\n    const curLiked = curUser.data.likedMemes.includes(memeID);\n    setLiked(curLiked);\n    const curDisliked = curUser.data.dislikedMemes.includes(memeID);\n    setDisliked(curDisliked);\n  };\n\n  const handleMemeLikes = async () => {\n    const curMeme = {\n      name: meme.name,\n      memeID: meme.id,\n      url: meme.url,\n    };\n    const response = await memeService.likeMeme(curMeme);\n    setOurMeme(response.data);\n  };\n\n  const handleUserLikes = async () => {\n    const curSessionUser = await checkLoggedIn();\n    const curUser = await userService.fetchUserById(curSessionUser._id);\n    await userService.likeMeme(curUser.data, memeID);\n  };\n\n  const handleMemeUnlikes = async () => {\n    const curMeme = {\n      title: meme.title,\n      memeID: meme.id,\n      url: meme.url,\n    };\n    const response = await memeService.unlikeMeme(curMeme);\n    setOurMeme(response.data);\n  };\n\n  const handleUserUnlikes = async () => {\n    const curSessionUser = await checkLoggedIn();\n    const curUser = await userService.fetchUserById(curSessionUser._id);\n    await userService.unlikeMeme(curUser.data, memeID);\n  };\n\n  const handleMemeUnlikeDislikes = async () => {\n    const curMeme = {\n      name: meme.name,\n      memeID: meme.id,\n      url: meme.url,\n    };\n    const response = await memeService.unlikeDislikeMeme(curMeme);\n    setOurMeme(response.data);\n  };\n\n  const handleUserDislikes = async () => {\n    const curSessionUser = await checkLoggedIn();\n    const curUser = await userService.fetchUserById(curSessionUser._id);\n    await userService.dislikeMeme(curUser.data, memeID);\n  };\n\n  const handleMemeUndislikeLikess = async () => {\n    const curMeme = {\n      title: meme.title,\n      memeID: meme.id,\n      url: meme.url,\n    };\n    const response = await memeService.unDislikeLikeMeme(curMeme);\n    setOurMeme(response.data);\n  };\n\n  const handleUserUndislikes = async () => {\n    const curSessionUser = await checkLoggedIn();\n    const curUser = await userService.fetchUserById(curSessionUser._id);\n    await userService.undislikeMeme(curUser.data, memeID);\n  };\n  const handleUserUnLikeDislikes = async () => {\n    const curSessionUser = await checkLoggedIn();\n    const curUser = await userService.fetchUserById(curSessionUser._id);\n    await userService.unlikeMeme(curUser.data, memeID);\n    const updatedcurUser = await userService.fetchUserById(curSessionUser._id);\n    await userService.dislikeMeme(updatedcurUser.data, memeID);\n  };\n  const handleUserUndislikeLikes = async () => {\n    const curSessionUser = await checkLoggedIn();\n    const curUser = await userService.fetchUserById(curSessionUser._id);\n    await userService.undislikeMeme(curUser.data, memeID);\n    const updatedcurUser = await userService.fetchUserById(curSessionUser._id);\n    await userService.likeMeme(updatedcurUser.data, memeID);\n  };\n\n  useEffect(() => {\n    fetchMemeByID();\n    fetchMemeByIDfromDatabase();\n    checkLiked();\n  }, []);\n\n  return (\n    <div>\n      <h1>{meme.name}</h1>\n      <img src={meme.url} height={500} />\n      <SecureContent\n        loggedInContent={\n          <div>\n            {\" \"}\n            <i\n              className={`${\n                liked ? \"fas fa-thumbs-up text-danger\" : \"fas fa-thumbs-up\"\n              }`}\n              onClick={() => {\n                if (liked) {\n                  handleMemeUnlikes();\n                  handleUserUnlikes();\n                  setLiked(false);\n                } else if (!liked && disliked) {\n                  handleMemeUndislikeLikess();\n                  handleUserUndislikeLikes();\n                  setLiked(true);\n                  setDisliked(false);\n                } else {\n                  handleMemeLikes();\n                  handleUserLikes();\n                  setLiked(true);\n                }\n              }}\n            ></i>\n            {(ourMeme && ourMeme.likes) || 0}\n            <i\n              className={`${\n                disliked\n                  ? \"fas fa-thumbs-down text-primary\"\n                  : \"fas fa-thumbs-down\"\n              }`}\n              onClick={() => {\n                if (disliked) {\n                  handleMemeLikes();\n                  handleUserUndislikes();\n                  setDisliked(false);\n                } else if (liked && !disliked) {\n                  handleMemeUnlikeDislikes();\n                  handleUserUnLikeDislikes();\n                  setDisliked(true);\n                  setLiked(false);\n                } else {\n                  handleMemeUnlikes();\n                  handleUserDislikes();\n                  setDisliked(true);\n                }\n              }}\n            ></i>\n          </div>\n        }\n        nonloggedInContent={<div>please login to like or comment</div>}\n      />\n    </div>\n  );\n};\n\nexport default MemeDetails;\n"]},"metadata":{},"sourceType":"module"}