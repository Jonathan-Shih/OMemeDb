{"ast":null,"code":"var _jsxFileName = \"/Users/jonshih/Documents/spring2022/cs4550/final-proj/frontend/src/components/screens/meme-details.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport SecureContent from \"../contexts/secure-context.js\";\nimport * as memeService from \"../services/meme-service.js\";\nimport * as userService from \"../services/user-service.js\";\nimport * as commentService from \"../services/comment-service.js\";\nimport { useProfile } from \"../contexts/profile-context.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MemeDetails = () => {\n  _s();\n\n  const [meme, setMeme] = useState({});\n  const [ourMeme, setOurMeme] = useState({});\n  const [liked, setLiked] = useState();\n  const [fav, setFav] = useState();\n  const [disliked, setDisliked] = useState();\n  const [comments, setComments] = useState([]);\n  const {\n    memeID\n  } = useParams();\n  const {\n    checkLoggedIn\n  } = useProfile();\n  const commentRef = useRef();\n\n  const fetchMemeByID = async () => {\n    const response = await memeService.fetchMemesFromAPI();\n    setMeme(response.data.data.memes.find(curMeme => curMeme.id === memeID));\n  };\n\n  const fetchMemeByIDfromDatabase = async () => {\n    const response = await memeService.fetchMemeById(memeID);\n    setOurMeme(response.data);\n  };\n\n  const checkLiked = async () => {\n    const curSessionUser = await checkLoggedIn();\n    const curUser = await userService.fetchUserById(curSessionUser._id);\n    const curLiked = curUser.data.likedMemes.includes(memeID);\n    setLiked(curLiked);\n    const curDisliked = curUser.data.dislikedMemes.includes(memeID);\n    setDisliked(curDisliked);\n  };\n\n  const checkFav = async () => {\n    const curSessionUser = await checkLoggedIn();\n    const curUser = await userService.fetchUserById(curSessionUser._id);\n    const curFav = curUser.data.favoriteMeme === memeID;\n    setFav(curFav);\n  };\n\n  const findComments = async () => {\n    const comments = await commentService.findCommentsByMemeID(memeID);\n    setComments(comments);\n  };\n\n  const handleUserActions = async action => {\n    const curSessionUser = await checkLoggedIn();\n    const curUser = await userService.fetchUserById(curSessionUser._id);\n\n    switch (action) {\n      case \"like\":\n        await userService.likeMeme(curUser.data, memeID);\n        break;\n\n      case \"unlike\":\n        await userService.unlikeMeme(curUser.data, memeID);\n        break;\n\n      case \"dislike\":\n        await userService.dislikeMeme(curUser.data, memeID);\n        break;\n\n      case \"undislike\":\n        await userService.undislikeMeme(curUser.data, memeID);\n        break;\n\n      case \"fav\":\n        await userService.favoriteMeme(curUser.data, memeID);\n        break;\n\n      case \"unfav\":\n        await userService.unfavoriteMeme(curUser.data, memeID);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleMemeActions = async action => {\n    const curMeme = {\n      name: meme.name,\n      memeID: meme.id,\n      url: meme.url\n    };\n    let response;\n\n    switch (action) {\n      case \"like\":\n        response = await memeService.likeMeme(curMeme);\n        break;\n\n      case \"unlike\":\n        response = await memeService.unlikeMeme(curMeme);\n        break;\n\n      default:\n        return;\n    }\n\n    setOurMeme(response.data);\n  };\n\n  const handleComment = async () => {\n    const curSessionUser = await checkLoggedIn();\n    const actualComment = await commentService.postComment(curSessionUser._id, meme.id, {\n      comment: commentRef.current.value,\n      commenter: curSessionUser._id,\n      username: curSessionUser.username\n    });\n    console.log(meme);\n    setComments([...comments, actualComment]);\n  };\n\n  useEffect(() => {\n    fetchMemeByID();\n    fetchMemeByIDfromDatabase();\n    checkLiked();\n    checkFav();\n    findComments();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-text bg-light meme-detail\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: meme.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meme-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: meme.url,\n          className: \"meme-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SecureContent, {\n          loggedInContent: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-actions left-text d-flex\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n              className: `p-2 ps-0 ${liked ? \"fas fa-thumbs-up text-danger\" : \"fas fa-thumbs-up\"}`,\n              onClick: async () => {\n                if (liked) {\n                  handleMemeActions(\"unlike\");\n                  handleUserActions(\"unlike\");\n                  setLiked(false);\n                } else if (!liked && disliked) {\n                  await handleMemeActions(\"like\");\n                  await handleUserActions(\"undislike\");\n                  await handleMemeActions(\"like\");\n                  await handleUserActions(\"like\");\n                  setLiked(true);\n                  setDisliked(false);\n                } else {\n                  handleMemeActions(\"like\");\n                  handleUserActions(\"like\");\n                  setLiked(true);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"p-1\",\n              children: ourMeme && ourMeme.likes || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: `p-2 ${disliked ? \"fas fa-thumbs-down text-primary\" : \"fas fa-thumbs-down\"}`,\n              onClick: async () => {\n                if (disliked) {\n                  handleMemeActions(\"like\");\n                  handleUserActions(\"undislike\");\n                  setDisliked(false);\n                } else if (liked && !disliked) {\n                  await handleMemeActions(\"unlike\");\n                  await handleUserActions(\"unlike\");\n                  await handleMemeActions(\"unlike\");\n                  await handleUserActions(\"dislike\");\n                  setDisliked(true);\n                  setLiked(false);\n                } else {\n                  handleMemeActions(\"unlike\");\n                  handleUserActions(\"dislike\");\n                  setDisliked(true);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: `ms-auto p-2 pe-0 ${fav ? \"fas fa-bookmark text-danger\" : \"fas fa-bookmark\"}`,\n              onClick: async () => {\n                if (fav) {\n                  handleUserActions(\"unfav\");\n                  setFav(false);\n                } else {\n                  handleUserActions(\"fav\");\n                  setFav(true);\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this),\n          nonloggedInContent: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-actions d-flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: `p-2 ${liked ? \"fas fa-thumbs-up text-danger\" : \"fas fa-thumbs-up\"}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"p-1\",\n              children: ourMeme && ourMeme.likes || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: `p-2 ${disliked ? \"fas fa-thumbs-down text-primary\" : \"fas fa-thumbs-down\"}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"ms-auto p-2 pe-0 fas fa-bookmark ml-auto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SecureContent, {\n      loggedInContent: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"caption-div left-text position-relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Caption the meme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: commentRef,\n          placeholder: \"Add your own caption to the meme!\",\n          className: \"form-control bg-light\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleComment,\n          className: \"btn btn-primary position-absolute bottom-0 end-0\",\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this),\n      nonloggedInContent: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \" please \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Link, {\n          children: \"long\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 31\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \" to like, favorite or comment \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), \"Captions:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group pt-1 mb-4\",\n      children: [comments.length === 0 && \"Be the first one to caption the meme!\", comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item comment-item\",\n        children: [comment && comment.username, \":\", /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"comment\",\n          children: comment && comment.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this)), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MemeDetails, \"F0cm+Y7HjUcaX5if5e/JDcIZ36Y=\", false, function () {\n  return [useParams, useProfile];\n});\n\n_c = MemeDetails;\nexport default MemeDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemeDetails\");","map":{"version":3,"sources":["/Users/jonshih/Documents/spring2022/cs4550/final-proj/frontend/src/components/screens/meme-details.js"],"names":["React","useEffect","useState","useRef","useParams","Link","SecureContent","memeService","userService","commentService","useProfile","MemeDetails","meme","setMeme","ourMeme","setOurMeme","liked","setLiked","fav","setFav","disliked","setDisliked","comments","setComments","memeID","checkLoggedIn","commentRef","fetchMemeByID","response","fetchMemesFromAPI","data","memes","find","curMeme","id","fetchMemeByIDfromDatabase","fetchMemeById","checkLiked","curSessionUser","curUser","fetchUserById","_id","curLiked","likedMemes","includes","curDisliked","dislikedMemes","checkFav","curFav","favoriteMeme","findComments","findCommentsByMemeID","handleUserActions","action","likeMeme","unlikeMeme","dislikeMeme","undislikeMeme","unfavoriteMeme","handleMemeActions","name","url","handleComment","actualComment","postComment","comment","current","value","commenter","username","console","log","likes","length","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport SecureContent from \"../contexts/secure-context.js\";\nimport * as memeService from \"../services/meme-service.js\";\nimport * as userService from \"../services/user-service.js\";\nimport * as commentService from \"../services/comment-service.js\";\nimport { useProfile } from \"../contexts/profile-context.js\";\n\nconst MemeDetails = () => {\n  const [meme, setMeme] = useState({});\n  const [ourMeme, setOurMeme] = useState({});\n  const [liked, setLiked] = useState();\n  const [fav, setFav] = useState();\n  const [disliked, setDisliked] = useState();\n  const [comments, setComments] = useState([]);\n  const { memeID } = useParams();\n  const { checkLoggedIn } = useProfile();\n  const commentRef = useRef();\n\n  const fetchMemeByID = async () => {\n    const response = await memeService.fetchMemesFromAPI();\n    setMeme(response.data.data.memes.find((curMeme) => curMeme.id === memeID));\n  };\n\n  const fetchMemeByIDfromDatabase = async () => {\n    const response = await memeService.fetchMemeById(memeID);\n    setOurMeme(response.data);\n  };\n\n  const checkLiked = async () => {\n    const curSessionUser = await checkLoggedIn();\n    const curUser = await userService.fetchUserById(curSessionUser._id);\n    const curLiked = curUser.data.likedMemes.includes(memeID);\n    setLiked(curLiked);\n    const curDisliked = curUser.data.dislikedMemes.includes(memeID);\n    setDisliked(curDisliked);\n  };\n\n  const checkFav = async () => {\n    const curSessionUser = await checkLoggedIn();\n    const curUser = await userService.fetchUserById(curSessionUser._id);\n    const curFav = curUser.data.favoriteMeme === memeID;\n    setFav(curFav);\n  };\n\n  const findComments = async () => {\n    const comments = await commentService.findCommentsByMemeID(memeID);\n    setComments(comments);\n  };\n\n  const handleUserActions = async (action) => {\n    const curSessionUser = await checkLoggedIn();\n    const curUser = await userService.fetchUserById(curSessionUser._id);\n    switch (action) {\n      case \"like\":\n        await userService.likeMeme(curUser.data, memeID);\n        break;\n      case \"unlike\":\n        await userService.unlikeMeme(curUser.data, memeID);\n        break;\n      case \"dislike\":\n        await userService.dislikeMeme(curUser.data, memeID);\n        break;\n      case \"undislike\":\n        await userService.undislikeMeme(curUser.data, memeID);\n        break;\n      case \"fav\":\n        await userService.favoriteMeme(curUser.data, memeID);\n        break;\n      case \"unfav\":\n        await userService.unfavoriteMeme(curUser.data, memeID);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleMemeActions = async (action) => {\n    const curMeme = {\n      name: meme.name,\n      memeID: meme.id,\n      url: meme.url,\n    };\n    let response;\n    switch (action) {\n      case \"like\":\n        response = await memeService.likeMeme(curMeme);\n        break;\n      case \"unlike\":\n        response = await memeService.unlikeMeme(curMeme);\n        break;\n      default:\n        return;\n    }\n    setOurMeme(response.data);\n  };\n\n  const handleComment = async () => {\n    const curSessionUser = await checkLoggedIn();\n    const actualComment = await commentService.postComment(\n      curSessionUser._id,\n      meme.id,\n      {\n        comment: commentRef.current.value,\n        commenter: curSessionUser._id,\n        username: curSessionUser.username,\n      }\n    );\n    console.log(meme);\n    setComments([...comments, actualComment]);\n  };\n\n  useEffect(() => {\n    fetchMemeByID();\n    fetchMemeByIDfromDatabase();\n    checkLiked();\n    checkFav();\n    findComments();\n  }, []);\n\n  return (\n    <div>\n      <div className=\"center-text bg-light meme-detail\">\n        <h2>{meme.name}</h2>\n        <div className={\"meme-div\"}>\n          <img src={meme.url} className={\"meme-image\"} />\n          <SecureContent\n            loggedInContent={\n              <div className=\"user-actions left-text d-flex\">\n                {\" \"}\n                <i\n                  className={`p-2 ps-0 ${\n                    liked ? \"fas fa-thumbs-up text-danger\" : \"fas fa-thumbs-up\"\n                  }`}\n                  onClick={async () => {\n                    if (liked) {\n                      handleMemeActions(\"unlike\");\n                      handleUserActions(\"unlike\");\n                      setLiked(false);\n                    } else if (!liked && disliked) {\n                      await handleMemeActions(\"like\");\n                      await handleUserActions(\"undislike\");\n                      await handleMemeActions(\"like\");\n                      await handleUserActions(\"like\");\n                      setLiked(true);\n                      setDisliked(false);\n                    } else {\n                      handleMemeActions(\"like\");\n                      handleUserActions(\"like\");\n                      setLiked(true);\n                    }\n                  }}\n                ></i>\n                <p className=\"p-1\">{(ourMeme && ourMeme.likes) || 0}</p>\n                <i\n                  className={`p-2 ${\n                    disliked\n                      ? \"fas fa-thumbs-down text-primary\"\n                      : \"fas fa-thumbs-down\"\n                  }`}\n                  onClick={async () => {\n                    if (disliked) {\n                      handleMemeActions(\"like\");\n                      handleUserActions(\"undislike\");\n                      setDisliked(false);\n                    } else if (liked && !disliked) {\n                      await handleMemeActions(\"unlike\");\n                      await handleUserActions(\"unlike\");\n                      await handleMemeActions(\"unlike\");\n                      await handleUserActions(\"dislike\");\n                      setDisliked(true);\n                      setLiked(false);\n                    } else {\n                      handleMemeActions(\"unlike\");\n                      handleUserActions(\"dislike\");\n                      setDisliked(true);\n                    }\n                  }}\n                ></i>\n                <i\n                  className={`ms-auto p-2 pe-0 ${\n                    fav ? \"fas fa-bookmark text-danger\" : \"fas fa-bookmark\"\n                  }`}\n                  onClick={async () => {\n                    if (fav) {\n                      handleUserActions(\"unfav\");\n                      setFav(false);\n                    } else {\n                      handleUserActions(\"fav\");\n                      setFav(true);\n                    }\n                  }}\n                ></i>\n              </div>\n            }\n            nonloggedInContent={\n              <div className=\"user-actions d-flex\">\n                <i\n                  className={`p-2 ${\n                    liked ? \"fas fa-thumbs-up text-danger\" : \"fas fa-thumbs-up\"\n                  }`}\n                ></i>\n                <p className=\"p-1\">{(ourMeme && ourMeme.likes) || 0}</p>\n                <i\n                  className={`p-2 ${\n                    disliked\n                      ? \"fas fa-thumbs-down text-primary\"\n                      : \"fas fa-thumbs-down\"\n                  }`}\n                ></i>\n                <i className={\"ms-auto p-2 pe-0 fas fa-bookmark ml-auto\"}></i>\n              </div>\n            }\n          />\n        </div>\n      </div>\n      <hr />\n      <SecureContent\n        loggedInContent={\n          <div className=\"caption-div left-text position-relative\">\n            <h4>Caption the meme</h4>\n            <textarea\n              ref={commentRef}\n              placeholder=\"Add your own caption to the meme!\"\n              className=\"form-control bg-light\"\n            ></textarea>\n            <button\n              onClick={handleComment}\n              className=\"btn btn-primary position-absolute bottom-0 end-0\"\n            >\n              Post\n            </button>\n          </div>\n        }\n        nonloggedInContent={\n          <div className=\"d-flex\">\n            <h6> please </h6> <Link>long</Link>{\" \"}\n            <h6> to like, favorite or comment </h6>\n          </div>\n        }\n      />\n      <hr />\n      Captions:\n      <ul className=\"list-group pt-1 mb-4\">\n        {comments.length === 0 && \"Be the first one to caption the meme!\"}\n        {comments.map((comment) => (\n          <li className=\"list-group-item comment-item\">\n            {comment && comment.username}:\n            <p className=\"comment\">{comment && comment.comment}</p>\n          </li>\n        ))}{\" \"}\n      </ul>\n    </div>\n  );\n};\n\nexport default MemeDetails;\n"]},"metadata":{},"sourceType":"module"}