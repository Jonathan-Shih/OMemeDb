{"ast":null,"code":"var _jsxFileName = \"/Users/jonshih/Documents/spring2022/cs4550/final-proj/frontend/src/screens/meme-details.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport SecureContent from \"../contexts/secure-context.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MemeDetails = () => {\n  _s();\n\n  const [meme, setMeme] = useState({});\n  const meme_URL = \"https://api.imgflip.com/get_memes\";\n  const {\n    memeID\n  } = useParams();\n\n  const fetchMemeByID = async () => {\n    const response = await axios.get(`${meme_URL}`);\n    setMeme(response.data.data.memes.find(curMeme => curMeme.id === memeID));\n  };\n\n  useEffect(() => {\n    fetchMemeByID();\n    console.log(meme);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: meme.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: meme.url,\n      height: 500\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SecureContent, {\n      loggedInContent: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fas fa-thumbs-up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fas fa-thumbs-down\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this),\n      nonloggedInContent: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"please login to like or comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MemeDetails, \"wGGg64DZ9txlRMsGi5GOHsLjUNE=\", false, function () {\n  return [useParams];\n});\n\n_c = MemeDetails;\nexport default MemeDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemeDetails\");","map":{"version":3,"sources":["/Users/jonshih/Documents/spring2022/cs4550/final-proj/frontend/src/screens/meme-details.js"],"names":["React","useEffect","useState","useParams","axios","SecureContent","MemeDetails","meme","setMeme","meme_URL","memeID","fetchMemeByID","response","get","data","memes","find","curMeme","id","console","log","name","url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMO,QAAQ,GAAG,mCAAjB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAaP,SAAS,EAA5B;;AACA,QAAMQ,aAAa,GAAG,YAAY;AAChC,UAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,GAAEJ,QAAS,EAAtB,CAAvB;AACAD,IAAAA,OAAO,CAACI,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmBC,KAAnB,CAAyBC,IAAzB,CAA+BC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeR,MAA1D,CAAD,CAAP;AACD,GAHD;;AAKAT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,aAAa;AACbQ,IAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAA,4BACE;AAAA,gBAAKA,IAAI,CAACc;AAAV;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,GAAG,EAAEd,IAAI,CAACe,GAAf;AAAoB,MAAA,MAAM,EAAE;AAA5B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,aAAD;AACE,MAAA,eAAe,eACb;AAAA,mBACG,GADH,eAEE;AAAG,UAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,gBAFF,oBAEmC;AAAG,UAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,gBAFnC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAOE,MAAA,kBAAkB,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPtB;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA7BD;;GAAMhB,W;UAGeH,S;;;KAHfG,W;AA+BN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport SecureContent from \"../contexts/secure-context.js\";\n\nconst MemeDetails = () => {\n  const [meme, setMeme] = useState({});\n  const meme_URL = \"https://api.imgflip.com/get_memes\";\n  const { memeID } = useParams();\n  const fetchMemeByID = async () => {\n    const response = await axios.get(`${meme_URL}`);\n    setMeme(response.data.data.memes.find((curMeme) => curMeme.id === memeID));\n  };\n\n  useEffect(() => {\n    fetchMemeByID();\n    console.log(meme);\n  }, []);\n\n  return (\n    <div>\n      <h1>{meme.name}</h1>\n      <img src={meme.url} height={500} />\n      <SecureContent\n        loggedInContent={\n          <div>\n            {\" \"}\n            <i class=\"fas fa-thumbs-up\"></i> <i class=\"fas fa-thumbs-down\"></i>\n          </div>\n        }\n        nonloggedInContent={<div>please login to like or comment</div>}\n      />\n    </div>\n  );\n};\n\nexport default MemeDetails;\n"]},"metadata":{},"sourceType":"module"}