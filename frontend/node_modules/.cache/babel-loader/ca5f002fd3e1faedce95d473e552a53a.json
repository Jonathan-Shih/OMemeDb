{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useProfile } from \"./profile-context\";\n\nconst SecureContent = _ref => {\n  _s();\n\n  let {\n    loggedInContent,\n    nonloggedInContent\n  } = _ref;\n  const {\n    checkLoggedIn\n  } = useProfile();\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const check = async () => {\n    try {\n      await checkLoggedIn();\n      setLoggedIn(true);\n    } catch (e) {\n      console.log(\"haw\");\n    }\n  };\n\n  useEffect(() => {\n    check();\n  }, []);\n\n  if (loggedIn) {\n    return loggedInContent;\n  }\n\n  return nonloggedInContent;\n};\n\n_s(SecureContent, \"dZZUg46pVQ7kDaQ0IAverFJsWkU=\", false, function () {\n  return [useProfile];\n});\n\n_c = SecureContent;\nexport default SecureContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"SecureContent\");","map":{"version":3,"sources":["/Users/jonshih/Documents/spring2022/cs4550/final-proj/frontend/src/components/contexts/secure-context.js"],"names":["React","useEffect","useState","useProfile","SecureContent","loggedInContent","nonloggedInContent","checkLoggedIn","loggedIn","setLoggedIn","check","e","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AAEA,MAAMC,aAAa,GAAG,QAA6C;AAAA;;AAAA,MAA5C;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,GAA4C;AACjE,QAAM;AAAEC,IAAAA;AAAF,MAAoBJ,UAAU,EAApC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;;AACA,QAAMQ,KAAK,GAAG,YAAY;AACxB,QAAI;AACF,YAAMH,aAAa,EAAnB;AACAE,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAHD,CAGE,OAAOE,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD;AACF,GAPD;;AAQAZ,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK;AACN,GAFQ,EAEN,EAFM,CAAT;;AAGA,MAAIF,QAAJ,EAAc;AACZ,WAAOH,eAAP;AACD;;AACD,SAAOC,kBAAP;AACD,CAlBD;;GAAMF,a;UACsBD,U;;;KADtBC,a;AAoBN,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useProfile } from \"./profile-context\";\n\nconst SecureContent = ({ loggedInContent, nonloggedInContent }) => {\n  const { checkLoggedIn } = useProfile();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const check = async () => {\n    try {\n      await checkLoggedIn();\n      setLoggedIn(true);\n    } catch (e) {\n      console.log(\"haw\");\n    }\n  };\n  useEffect(() => {\n    check();\n  }, []);\n  if (loggedIn) {\n    return loggedInContent;\n  }\n  return nonloggedInContent;\n};\n\nexport default SecureContent;\n"]},"metadata":{},"sourceType":"module"}