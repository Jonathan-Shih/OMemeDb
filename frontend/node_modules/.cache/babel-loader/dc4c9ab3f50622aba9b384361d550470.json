{"ast":null,"code":"var _jsxFileName = \"/Users/jonshih/Documents/spring2022/cs4550/final-proj/frontend/src/screens/meme-search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link, useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchOmdb = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const {\n    searchString\n  } = useParams();\n  const titleRef = useRef();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const meme_URL = \"https://api.imgflip.com/get_memes\";\n\n  const searchMoviesByTitle = async () => {\n    const response = await axios.get(`${meme_URL}`);\n    setMovies(response.data.memes); // navigate(`/omdb/${titleRef.current.value}`);\n  };\n\n  useEffect(() => {\n    if (searchString) {\n      titleRef.current.value = searchString;\n      searchMoviesByTitle();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search Omdb\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: searchMoviesByTitle,\n          className: \"btn btn-primary float-end\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: titleRef,\n          className: \"form-control w-75\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" $\", movies, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchOmdb, \"qMDBQWidPdswqwLHMQYKti/YXUc=\", false, function () {\n  return [useParams, useNavigate, useLocation];\n});\n\n_c = SearchOmdb;\nexport default SearchOmdb;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchOmdb\");","map":{"version":3,"sources":["/Users/jonshih/Documents/spring2022/cs4550/final-proj/frontend/src/screens/meme-search.js"],"names":["React","useEffect","useRef","useState","axios","Link","useLocation","useNavigate","useParams","SearchOmdb","movies","setMovies","searchString","titleRef","navigate","location","meme_URL","searchMoviesByTitle","response","get","data","memes","current","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,WAA5B,EAAyCC,SAAzC,QAA0D,kBAA1D;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAES,IAAAA;AAAF,MAAmBJ,SAAS,EAAlC;AACA,QAAMK,QAAQ,GAAGX,MAAM,EAAvB;AACA,QAAMY,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,QAAQ,GAAG,mCAAjB;;AACA,QAAMC,mBAAmB,GAAG,YAAY;AACtC,UAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAW,GAAEH,QAAS,EAAtB,CAAvB;AACAL,IAAAA,SAAS,CAACO,QAAQ,CAACE,IAAT,CAAcC,KAAf,CAAT,CAFsC,CAGtC;AACD,GAJD;;AAKApB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,YAAJ,EAAkB;AAChBC,MAAAA,QAAQ,CAACS,OAAT,CAAiBC,KAAjB,GAAyBX,YAAzB;AACAK,MAAAA,mBAAmB;AACpB;AACF,GALQ,EAKN,EALM,CAAT;AAMA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,gCACE;AACE,UAAA,OAAO,EAAEA,mBADX;AAEE,UAAA,SAAS,EAAC,2BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAO,UAAA,GAAG,EAAEJ,QAAZ;AAAsB,UAAA,SAAS,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAA,yBAAMH,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CApCD;;GAAMD,U;UAEqBD,S,EAERD,W,EACAD,W;;;KALbG,U;AAsCN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link, useLocation, useNavigate, useParams } from \"react-router-dom\";\n\nconst SearchOmdb = () => {\n  const [movies, setMovies] = useState([]);\n  const { searchString } = useParams();\n  const titleRef = useRef();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const meme_URL = \"https://api.imgflip.com/get_memes\";\n  const searchMoviesByTitle = async () => {\n    const response = await axios.get(`${meme_URL}`);\n    setMovies(response.data.memes);\n    // navigate(`/omdb/${titleRef.current.value}`);\n  };\n  useEffect(() => {\n    if (searchString) {\n      titleRef.current.value = searchString;\n      searchMoviesByTitle();\n    }\n  }, []);\n  return (\n    <div>\n      <h1>Search Omdb</h1>\n\n      <ul className=\"list-group\">\n        <li className=\"list-group-item\">\n          <button\n            onClick={searchMoviesByTitle}\n            className=\"btn btn-primary float-end\"\n          >\n            Search\n          </button>\n          <input ref={titleRef} className=\"form-control w-75\" />\n        </li>\n        <p> ${movies} </p>\n      </ul>\n    </div>\n  );\n};\n\nexport default SearchOmdb;\n"]},"metadata":{},"sourceType":"module"}